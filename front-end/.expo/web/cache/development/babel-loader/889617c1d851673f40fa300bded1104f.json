{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FloatingLabel from \"../internal/textfield/FloatingLabel\";\nimport Underline from \"../internal/textfield/Underline\";\nimport MKColor from \"../MKColor\";\nimport { getTheme } from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultProps = {\n  style: {\n    height: 39\n  },\n  floatingLabelEnabled: true,\n  floatingLabelAniDuration: 200,\n  underlineEnabled: true,\n  underlineSize: 2\n};\n\nvar Textfield = function (_Component) {\n  _inherits(Textfield, _Component);\n\n  var _super = _createSuper(Textfield);\n\n  function Textfield(props) {\n    var _this;\n\n    _classCallCheck(this, Textfield);\n\n    _this = _super.call(this, props);\n    _this.theme = getTheme();\n    _this.inputRef = createRef();\n    _this.labelRef = createRef();\n    _this.underlineRef = createRef();\n\n    _this._onTextChange = function (text) {\n      _this.bufferedValue = text;\n\n      _this._callback('onTextChange', text);\n\n      _this._callback('onChangeText', text);\n    };\n\n    _this._onFocus = function (e) {\n      _this._aniStartHighlight(true);\n\n      _this._callback('onFocus', e);\n    };\n\n    _this._onBlur = function (e) {\n      _this._aniStopHighlight();\n\n      _this._callback('onBlur', e);\n    };\n\n    _this._doMeasurement = function () {\n      if (_this.inputRef.current) {\n        _this.inputRef.current.measure(_this._onInputMeasured);\n      }\n\n      if (_this.props.floatingLabelEnabled && _this.labelRef.current) {\n        _this.labelRef.current.measure(_this._onLabelMeasured);\n      }\n    };\n\n    _this._onLabelMeasured = function (left, top, width, height) {\n      _this.setState({\n        inputMarginTop: height\n      });\n    };\n\n    _this._onInputMeasured = function (left, top, width, height) {\n      _extends(_this.inputFrame, {\n        left: left,\n        top: top,\n        width: width,\n        height: height\n      });\n\n      if (_this.underlineRef.current) {\n        _this.underlineRef.current.updateLineLength(width, function () {\n          if (_this.bufferedValue || _this.isFocused()) {\n            _this._aniStartHighlight(_this.isFocused());\n          }\n        });\n      }\n    };\n\n    _this.inputFrame = {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n    _this.state = {\n      inputMarginTop: 0\n    };\n    return _this;\n  }\n\n  _createClass(Textfield, [{\n    key: \"bufferedValue\",\n    get: function get() {\n      return (this._bufferedValue || '').trim();\n    },\n    set: function set(v) {\n      this._bufferedValue = v;\n\n      if (v) {\n        this._aniFloatLabel();\n      }\n    }\n  }, {\n    key: \"placeholder\",\n    set: function set(placeholder) {\n      this.inputRef.current && this.inputRef.current.setNativeProps({\n        placeholder: placeholder,\n        text: this._bufferedValue\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.inputRef.current && this.inputRef.current.focus();\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return (this.inputRef.current && this.inputRef.current.isFocused()) === true;\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputRef.current && this.inputRef.current.blur();\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.bufferedValue = this.props.value || this.props.defaultValue;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var newText = nextProps.value || nextProps.defaultValue;\n\n      if (newText) {\n        this.bufferedValue = newText;\n      }\n\n      if (nextProps.value) {\n        this.bufferedValue = nextProps.value;\n      } else if (nextProps.defaultValue && this.props.defaultValue !== nextProps.defaultValue) {\n        this.bufferedValue = nextProps.defaultValue;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      requestAnimationFrame(this._doMeasurement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tfTheme = this.theme.textfieldStyle;\n      var floatingLabel = this.props.floatingLabelEnabled ? _jsx(FloatingLabel, _objectSpread(_objectSpread({\n        ref: this.labelRef\n      }, this.props), {}, {\n        label: this.props.placeholder,\n        tint: this.props.tint || tfTheme.tintColor,\n        highlightColor: this.props.highlightColor || tfTheme.highlightColor,\n        floatingLabelFont: this.props.floatingLabelFont || tfTheme.floatingLabelFont\n      })) : null;\n\n      var underline = _jsx(Underline, _objectSpread(_objectSpread({\n        ref: this.underlineRef\n      }, this.props), {}, {\n        tint: this.props.tint || tfTheme.tintColor,\n        highlightColor: this.props.highlightColor || tfTheme.highlightColor,\n        underlineAniDur: this.props.floatingLabelAniDuration\n      }));\n\n      return _jsxs(View, {\n        style: this.props.style,\n        onLayout: this._doMeasurement,\n        children: [floatingLabel, _jsx(TextInput, _objectSpread(_objectSpread(_objectSpread({\n          ref: this.inputRef\n        }, this.props), this.props.additionalInputProps), {}, {\n          style: [{\n            backgroundColor: MKColor.Transparent,\n            alignSelf: 'stretch',\n            paddingTop: 2,\n            paddingBottom: 2,\n            marginTop: this.state.inputMarginTop\n          }, tfTheme.textInputStyle, this.props.textInputStyle],\n          onChangeText: this._onTextChange,\n          onFocus: this._onFocus,\n          onBlur: this._onBlur,\n          secureTextEntry: this.props.password,\n          underlineColorAndroid: \"transparent\"\n        })), underline]\n      });\n    }\n  }, {\n    key: \"startAnimations\",\n    value: function startAnimations(animations, cb) {\n      if (animations.length) {\n        this.anim && this.anim.stop();\n        this.anim = Animated.parallel(animations);\n        this.anim.start(cb);\n      }\n    }\n  }, {\n    key: \"_aniFloatLabel\",\n    value: function _aniFloatLabel() {\n      if (this.bufferedValue && this.props.floatingLabelEnabled && this.labelRef.current) {\n        this.startAnimations(this.labelRef.current.aniFloatLabel());\n      }\n    }\n  }, {\n    key: \"_aniStartHighlight\",\n    value: function _aniStartHighlight(focused) {\n      if (this.props.floatingLabelEnabled) {\n        this.placeholder = '';\n\n        if (this.labelRef.current) {\n          this.labelRef.current.updateLabel(this.props.placeholder || '');\n        }\n      }\n\n      if (this.underlineRef.current && this.labelRef.current) {\n        this.startAnimations([].concat(_toConsumableArray(this.underlineRef.current.aniStretchUnderline(focused)), _toConsumableArray(this.labelRef.current.aniFloatLabel())));\n      }\n    }\n  }, {\n    key: \"_aniStopHighlight\",\n    value: function _aniStopHighlight() {\n      var _this2 = this;\n\n      if (this.underlineRef.current && this.labelRef.current) {\n        var onEnd = function onEnd() {\n          if (_this2.props.floatingLabelEnabled) {\n            _this2.placeholder = _this2.props.placeholder || '';\n\n            if (!_this2.bufferedValue && _this2.labelRef.current) {\n              _this2.labelRef.current.updateLabel('');\n            }\n          }\n        };\n\n        this.startAnimations([].concat(_toConsumableArray(this.underlineRef.current.aniShrinkUnderline()), _toConsumableArray(!this.bufferedValue ? this.labelRef.current.aniSinkLabel() : [])), onEnd);\n      }\n    }\n  }, {\n    key: \"_callback\",\n    value: function _callback(prop, evt) {\n      var props = this.props;\n      props[prop] && props[prop](evt);\n    }\n  }]);\n\n  return Textfield;\n}(Component);\n\nexport { Textfield as default };\nTextfield.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/iraklisbogiatziou/Desktop/TBAY/front-end/node_modules/react-native-material-kit/lib/mdl/Textfield.js"],"names":["React","Component","createRef","FloatingLabel","Underline","MKColor","getTheme","defaultProps","style","height","floatingLabelEnabled","floatingLabelAniDuration","underlineEnabled","underlineSize","Textfield","props","theme","inputRef","labelRef","underlineRef","_onTextChange","text","bufferedValue","_callback","_onFocus","e","_aniStartHighlight","_onBlur","_aniStopHighlight","_doMeasurement","current","measure","_onInputMeasured","_onLabelMeasured","left","top","width","setState","inputMarginTop","inputFrame","updateLineLength","isFocused","state","_bufferedValue","trim","v","_aniFloatLabel","placeholder","setNativeProps","focus","blur","value","defaultValue","nextProps","newText","requestAnimationFrame","tfTheme","textfieldStyle","floatingLabel","tint","tintColor","highlightColor","floatingLabelFont","underline","additionalInputProps","backgroundColor","Transparent","alignSelf","paddingTop","paddingBottom","marginTop","textInputStyle","password","animations","cb","length","anim","stop","Animated","parallel","start","startAnimations","aniFloatLabel","focused","updateLabel","aniStretchUnderline","onEnd","aniShrinkUnderline","aniSinkLabel","prop","evt"],"mappings":"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","sourcesContent":["/**\n * MDL style textfield component.\n *\n * See {@link http://www.getmdl.io/components/index.html#textfields-section | MDL Textfield}\n *\n * Created by ywu on 15/8/3.\n */\nimport React, { Component, createRef } from 'react';\nimport { Animated, TextInput, View, } from 'react-native';\nimport FloatingLabel from '../internal/textfield/FloatingLabel';\nimport Underline from '../internal/textfield/Underline';\nimport MKColor from '../MKColor';\nimport { getTheme } from '../theme';\n/** Default props of the {@link Textfield} component */\nconst defaultProps = {\n    // tintColor: 'rgba(0,0,0,.12)',\n    // highlightColor: getTheme().primaryColor,\n    // floatingLabelFont: {\n    //   fontSize: getTheme().fontSize - 2,\n    // },\n    style: {\n        height: 39,\n    },\n    // textInputStyle: {\n    //   color: getTheme().fontColor,\n    //   fontSize: getTheme().fontSize + 2,\n    //   paddingLeft: 0,\n    //   paddingRight: 0,\n    // },\n    floatingLabelEnabled: true,\n    floatingLabelAniDuration: 200,\n    underlineEnabled: true,\n    underlineSize: 2,\n};\n/**\n * The `Textfield` component, which has an optional {@link FloatingLabel} and {@link Underline}.\n * - TODO styling `read-only` & `disabled` mode\n */\nexport default class Textfield extends Component {\n    constructor(props) {\n        super(props);\n        this.theme = getTheme();\n        this.inputRef = createRef();\n        this.labelRef = createRef();\n        this.underlineRef = createRef();\n        this._onTextChange = (text) => {\n            this.bufferedValue = text;\n            this._callback('onTextChange', text);\n            this._callback('onChangeText', text);\n        };\n        this._onFocus = (e) => {\n            this._aniStartHighlight(true);\n            this._callback('onFocus', e);\n        };\n        this._onBlur = (e) => {\n            this._aniStopHighlight();\n            this._callback('onBlur', e);\n        };\n        this._doMeasurement = () => {\n            if (this.inputRef.current) {\n                this.inputRef.current.measure(this._onInputMeasured);\n            }\n            if (this.props.floatingLabelEnabled && this.labelRef.current) {\n                this.labelRef.current.measure(this._onLabelMeasured);\n            }\n        };\n        this._onLabelMeasured = (left, top, width, height) => {\n            this.setState({ inputMarginTop: height });\n        };\n        this._onInputMeasured = (left, top, width, height) => {\n            Object.assign(this.inputFrame, { left, top, width, height });\n            if (this.underlineRef.current) {\n                this.underlineRef.current.updateLineLength(width, () => {\n                    if (this.bufferedValue || this.isFocused()) {\n                        this._aniStartHighlight(this.isFocused()); // if input not empty, lift the label\n                    }\n                });\n            }\n        };\n        this.inputFrame = { left: 0, top: 0, width: 0, height: 0 };\n        this.state = {\n            inputMarginTop: 0,\n        };\n    }\n    set bufferedValue(v) {\n        this._bufferedValue = v;\n        if (v) {\n            this._aniFloatLabel();\n        }\n    }\n    get bufferedValue() {\n        return (this._bufferedValue || '').trim();\n    }\n    set placeholder(placeholder) {\n        this.inputRef.current &&\n            this.inputRef.current.setNativeProps({\n                placeholder,\n                text: this._bufferedValue,\n            });\n    }\n    /**\n     * Requests focus for the given input or view. The exact behavior triggered\n     * will depend on the platform and type of view.\n     */\n    focus() {\n        this.inputRef.current && this.inputRef.current.focus();\n    }\n    /**\n     * Checks if the input is currently focused.\n     */\n    isFocused() {\n        return (this.inputRef.current && this.inputRef.current.isFocused()) === true;\n    }\n    /**\n     * Removes focus from an input or view. This is the opposite of `focus()`.\n     */\n    blur() {\n        this.inputRef.current && this.inputRef.current.blur();\n    }\n    UNSAFE_componentWillMount() {\n        this.bufferedValue = this.props.value || this.props.defaultValue;\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const newText = nextProps.value || nextProps.defaultValue;\n        if (newText) {\n            this.bufferedValue = newText;\n        }\n        if (nextProps.value) {\n            this.bufferedValue = nextProps.value;\n        }\n        else if (nextProps.defaultValue && this.props.defaultValue !== nextProps.defaultValue) {\n            // use defaultValue if it's changed\n            this.bufferedValue = nextProps.defaultValue;\n        }\n    }\n    componentDidMount() {\n        requestAnimationFrame(this._doMeasurement);\n    }\n    render() {\n        const tfTheme = this.theme.textfieldStyle;\n        const floatingLabel = this.props.floatingLabelEnabled ? (<FloatingLabel ref={this.labelRef} {...this.props} label={this.props.placeholder} tint={this.props.tint || tfTheme.tintColor} highlightColor={this.props.highlightColor || tfTheme.highlightColor} floatingLabelFont={this.props.floatingLabelFont || tfTheme.floatingLabelFont}/>) : null;\n        const underline = (<Underline ref={this.underlineRef} {...this.props} tint={this.props.tint || tfTheme.tintColor} highlightColor={this.props.highlightColor || tfTheme.highlightColor} underlineAniDur={this.props.floatingLabelAniDuration}/>);\n        return (<View style={this.props.style} onLayout={this._doMeasurement}>\n        {floatingLabel}\n        <TextInput ref={this.inputRef} {...this.props} {...this.props.additionalInputProps} style={[\n            {\n                backgroundColor: MKColor.Transparent,\n                alignSelf: 'stretch',\n                paddingTop: 2,\n                paddingBottom: 2,\n                marginTop: this.state.inputMarginTop,\n            },\n            tfTheme.textInputStyle,\n            this.props.textInputStyle,\n        ]} onChangeText={this._onTextChange} onFocus={this._onFocus} onBlur={this._onBlur} secureTextEntry={this.props.password} underlineColorAndroid=\"transparent\"/>\n        {underline}\n      </View>);\n    }\n    startAnimations(animations, cb) {\n        if (animations.length) {\n            this.anim && this.anim.stop();\n            this.anim = Animated.parallel(animations);\n            this.anim.start(cb);\n        }\n    }\n    _aniFloatLabel() {\n        if (this.bufferedValue && this.props.floatingLabelEnabled && this.labelRef.current) {\n            this.startAnimations(this.labelRef.current.aniFloatLabel());\n        }\n    }\n    // animation when textfield focused\n    _aniStartHighlight(focused) {\n        if (this.props.floatingLabelEnabled) {\n            // hide fixed placeholder, if floating\n            this.placeholder = '';\n            // and show floating label\n            // FIXME workaround https://github.com/facebook/react-native/issues/3220\n            if (this.labelRef.current) {\n                this.labelRef.current.updateLabel(this.props.placeholder || '');\n            }\n        }\n        if (this.underlineRef.current && this.labelRef.current) {\n            this.startAnimations([\n                ...this.underlineRef.current.aniStretchUnderline(focused),\n                ...this.labelRef.current.aniFloatLabel(),\n            ]);\n        }\n    }\n    // animation when textfield lost focus\n    _aniStopHighlight() {\n        if (this.underlineRef.current && this.labelRef.current) {\n            const onEnd = () => {\n                if (this.props.floatingLabelEnabled) {\n                    // show fixed placeholder after floating label collapsed\n                    this.placeholder = this.props.placeholder || '';\n                    // and hide floating label\n                    // FIXME workaround https://github.com/facebook/react-native/issues/3220\n                    if (!this.bufferedValue && this.labelRef.current) {\n                        this.labelRef.current.updateLabel('');\n                    }\n                }\n            };\n            this.startAnimations([\n                ...this.underlineRef.current.aniShrinkUnderline(),\n                ...(!this.bufferedValue ? this.labelRef.current.aniSinkLabel() : []),\n            ], onEnd);\n        }\n    }\n    _callback(prop, evt) {\n        const props = this.props;\n        props[prop] && props[prop](evt);\n    }\n}\n/** Defaults, see {@link defaultProps} */\nTextfield.defaultProps = defaultProps;\n//# sourceMappingURL=Textfield.js.map"]},"metadata":{},"sourceType":"module"}