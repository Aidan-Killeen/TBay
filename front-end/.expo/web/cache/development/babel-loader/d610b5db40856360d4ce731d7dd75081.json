{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NativeTick = requireNativeComponent('TickView', Tick);\n\nvar Tick = function (_Component) {\n  _inherits(Tick, _Component);\n\n  var _super = _createSuper(Tick);\n\n  function Tick() {\n    var _this;\n\n    _classCallCheck(this, Tick);\n\n    _this = _super.apply(this, arguments);\n\n    _this.render = function () {\n      return _jsx(NativeTick, _objectSpread(_objectSpread({}, _this.props), {}, {\n        fillColor: processColor(_this.props.fillColor)\n      }));\n    };\n\n    return _this;\n  }\n\n  return _createClass(Tick);\n}(Component);\n\nexport { Tick as default };\nexport var AnimatedTick = Animated.createAnimatedComponent(Tick);","map":{"version":3,"sources":["/Users/iraklisbogiatziou/Desktop/TBAY/front-end/node_modules/react-native-material-kit/lib/internal/Tick.js"],"names":["React","Component","requireNativeComponent","NativeTick","Tick","arguments","render","props","processColor","fillColor","AnimatedTick","Animated","createAnimatedComponent"],"mappings":";;;;;;;;;;;;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;SACiCC,sB;;AAEjC,IAAMC,UAAU,GAAGD,sBAAsB,CAAC,UAAD,EAAaE,IAAb,CAAzC;;IAMqBA,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;;AACA,UAAKC,MAAL,GAAc;AAAA,aAAM,KAAC,UAAD,kCAAgB,MAAKC,KAArB;AAA4B,QAAA,SAAS,EAAEC,YAAY,CAAC,MAAKD,KAAL,CAAWE,SAAZ;AAAnD,SAAN;AAAA,KAAd;;AAFU;AAGb;;;EAJ6BR,S;;SAAbG,I;AAMrB,OAAO,IAAMM,YAAY,GAAGC,QAAQ,CAACC,uBAAT,CAAiCR,IAAjC,CAArB","sourcesContent":["/* eslint react/prefer-stateless-function:0 */\n/**\n * The `Tick` part used in `Checkbox`, for internal use only\n */\nimport React, { Component } from 'react';\nimport { Animated, processColor, requireNativeComponent } from 'react-native';\n// @ts-ignore ComponentInterface requires `propTypes`\nconst NativeTick = requireNativeComponent('TickView', Tick);\n/**\n * Wrap the native `Tick` component, which is used in {@link Checkbox}.\n *\n * Note: `createAnimatedComponent` does not support SFC\n */\nexport default class Tick extends Component {\n    constructor() {\n        super(...arguments);\n        this.render = () => <NativeTick {...this.props} fillColor={processColor(this.props.fillColor)}/>;\n    }\n}\nexport const AnimatedTick = Animated.createAnimatedComponent(Tick);\n//# sourceMappingURL=Tick.js.map"]},"metadata":{},"sourceType":"module"}