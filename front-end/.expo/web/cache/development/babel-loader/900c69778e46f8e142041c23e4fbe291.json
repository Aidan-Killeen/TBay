{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultProps = {\n  underlineEnabled: true,\n  underlineAniDur: 200,\n  underlineSize: 2\n};\n\nvar Underline = function (_Component) {\n  _inherits(Underline, _Component);\n\n  var _super = _createSuper(Underline);\n\n  function Underline(props) {\n    var _this;\n\n    _classCallCheck(this, Underline);\n\n    _this = _super.call(this, props);\n    _this.animatedLeft = new Animated.Value(0);\n    _this.animatedLineLength = new Animated.Value(0);\n\n    _this.render = function () {\n      return _jsxs(View, {\n        pointerEvents: \"none\",\n        style: {\n          height: _this.props.underlineSize\n        },\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: _this.props.tint,\n            position: 'absolute',\n            height: _this.props.underlineSize,\n            width: _this.state.lineLength\n          }\n        }), _this.renderUnderline()]\n      });\n    };\n\n    _this.renderUnderline = function () {\n      return _this.props.underlineEnabled && _jsx(Animated.View, {\n        style: {\n          backgroundColor: _this.props.highlightColor,\n          position: 'absolute',\n          left: _this.animatedLeft,\n          height: _this.props.underlineSize,\n          width: _this.animatedLineLength\n        }\n      });\n    };\n\n    _this.state = {\n      lineLength: 0\n    };\n    return _this;\n  }\n\n  _createClass(Underline, [{\n    key: \"updateLineLength\",\n    value: function updateLineLength(lineLength, cb) {\n      this.setState({\n        lineLength: lineLength\n      }, cb);\n    }\n  }, {\n    key: \"aniStretchUnderline\",\n    value: function aniStretchUnderline(focused) {\n      if (!this.props.underlineEnabled || !focused) {\n        return [];\n      }\n\n      this.animatedLeft.setValue(this.state.lineLength / 2);\n      return [Animated.timing(this.animatedLeft, {\n        toValue: 0,\n        duration: this.props.underlineAniDur\n      }), Animated.timing(this.animatedLineLength, {\n        toValue: this.state.lineLength,\n        duration: this.props.underlineAniDur\n      })];\n    }\n  }, {\n    key: \"aniShrinkUnderline\",\n    value: function aniShrinkUnderline() {\n      return this.props.underlineEnabled ? [Animated.timing(this.animatedLeft, {\n        toValue: this.state.lineLength / 2,\n        duration: this.props.underlineAniDur\n      }), Animated.timing(this.animatedLineLength, {\n        toValue: 0,\n        duration: this.props.underlineAniDur\n      })] : [];\n    }\n  }]);\n\n  return Underline;\n}(Component);\n\nexport { Underline as default };\nUnderline.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/iraklisbogiatziou/Desktop/TBAY/front-end/node_modules/react-native-material-kit/lib/internal/textfield/Underline.js"],"names":["React","Component","defaultProps","underlineEnabled","underlineAniDur","underlineSize","Underline","props","animatedLeft","Animated","Value","animatedLineLength","render","height","backgroundColor","tint","position","width","state","lineLength","renderUnderline","highlightColor","left","cb","setState","focused","setValue","timing","toValue","duration"],"mappings":"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","sourcesContent":["/**\n * `Underline` component of {@link Textfield}s.\n */\nimport React, { Component } from 'react';\nimport { Animated, View } from 'react-native';\nconst defaultProps = {\n    underlineEnabled: true,\n    underlineAniDur: 200,\n    underlineSize: 2,\n};\n/**\n * `Underline` component of a {@link Textfield}.\n */\nexport default class Underline extends Component {\n    constructor(props) {\n        super(props);\n        this.animatedLeft = new Animated.Value(0);\n        this.animatedLineLength = new Animated.Value(0);\n        this.render = () => (<View pointerEvents=\"none\" style={{\n            // top: -this.props.underlineSize,\n            height: this.props.underlineSize,\n        }}>\n      <View // the default silver border\n         style={{\n            backgroundColor: this.props.tint,\n            position: 'absolute',\n            height: this.props.underlineSize,\n            width: this.state.lineLength,\n        }}/>\n      {this.renderUnderline()}\n    </View>);\n        /** the colorful forefront line, animation enabled */\n        this.renderUnderline = () => this.props.underlineEnabled && (<Animated.View style={{\n            backgroundColor: this.props.highlightColor,\n            position: 'absolute',\n            left: this.animatedLeft,\n            height: this.props.underlineSize,\n            width: this.animatedLineLength,\n        }}/>);\n        this.state = {\n            lineLength: 0,\n        };\n    }\n    /** update the length of stretched underline */\n    updateLineLength(lineLength, cb) {\n        this.setState({ lineLength }, cb);\n    }\n    /** stretch the line, from center */\n    aniStretchUnderline(focused) {\n        if (!this.props.underlineEnabled || !focused) {\n            return [];\n        }\n        this.animatedLeft.setValue(this.state.lineLength / 2);\n        return [\n            Animated.timing(this.animatedLeft, {\n                toValue: 0,\n                duration: this.props.underlineAniDur,\n            }),\n            Animated.timing(this.animatedLineLength, {\n                toValue: this.state.lineLength,\n                duration: this.props.underlineAniDur,\n            }),\n        ];\n    }\n    /** collapse the the line to a single point at center */\n    aniShrinkUnderline() {\n        return this.props.underlineEnabled\n            ? [\n                Animated.timing(this.animatedLeft, {\n                    toValue: this.state.lineLength / 2,\n                    duration: this.props.underlineAniDur,\n                }),\n                Animated.timing(this.animatedLineLength, {\n                    toValue: 0,\n                    duration: this.props.underlineAniDur,\n                }),\n            ]\n            : [];\n    }\n}\n/** Defaults, see {@link defaultProps} */\nUnderline.defaultProps = defaultProps;\n//# sourceMappingURL=Underline.js.map"]},"metadata":{},"sourceType":"module"}