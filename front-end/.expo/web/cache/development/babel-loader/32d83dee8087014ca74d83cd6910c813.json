{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getTheme } from \"../theme\";\nimport IndeterminateProgress from \"./IndeterminateProgress\";\nimport { defaultProps } from \"./progress_common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Progress = function (_Component) {\n  _inherits(Progress, _Component);\n\n  var _super = _createSuper(Progress);\n\n  function Progress(props) {\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    _this = _super.call(this, props);\n    _this.theme = getTheme();\n    _this._progress = 0;\n    _this._buffer = 0;\n    _this._totalLength = 0;\n    _this._height = new Animated.Value(0);\n    _this._animatedLength = new Animated.Value(0);\n    _this._animatedBufferLength = new Animated.Value(0);\n\n    _this._onLayout = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n          width = _ref$nativeEvent$layo.width,\n          height = _ref$nativeEvent$layo.height;\n\n      if (width > 0 && _this._totalLength !== width) {\n        _this._totalLength = width;\n\n        _this._height.setValue(height);\n\n        _this._aniUpdateProgress(_this.progress);\n\n        _this._aniUpdateBuffer(_this.buffer);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"progress\",\n    get: function get() {\n      return this._progress;\n    },\n    set: function set(value) {\n      if (value >= 0 && value <= 1 && value !== this._progress) {\n        this._progress = value;\n\n        this._aniUpdateProgress(value);\n      }\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    },\n    set: function set(value) {\n      if (value >= 0 && value !== this._buffer) {\n        this._buffer = value;\n\n        this._aniUpdateBuffer(value);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.progress = this.props.progress || 0;\n      this.buffer = this.props.buffer || 0;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.progress = nextProps.progress || 0;\n      this.buffer = nextProps.buffer || 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var progressTheme = this.theme.progressStyle;\n      var style = {\n        backgroundColor: progressTheme.backgroundColor\n      };\n      var bufferColor = this.props.bufferColor || progressTheme.bufferColor;\n      var progressColor = this.props.progressColor || progressTheme.progressColor;\n      return _jsxs(View, {\n        style: [defaultProps.style, style, this.props.style],\n        onLayout: this._onLayout,\n        children: [_jsx(Animated.View, {\n          style: {\n            position: 'absolute',\n            backgroundColor: bufferColor,\n            width: this._animatedBufferLength,\n            height: this._height\n          }\n        }), _jsx(Animated.View, {\n          style: {\n            position: 'absolute',\n            backgroundColor: progressColor,\n            width: this._animatedLength,\n            height: this._height\n          }\n        })]\n      });\n    }\n  }, {\n    key: \"_aniUpdateProgress\",\n    value: function _aniUpdateProgress(theProgress) {\n      if (!(this._totalLength > 0 && theProgress >= 0)) {\n        return;\n      }\n\n      Animated.timing(this._animatedLength, {\n        toValue: theProgress * this._totalLength,\n        duration: this.props.progressAniDuration || 300,\n        easing: Easing.out(Easing.quad)\n      }).start();\n    }\n  }, {\n    key: \"_aniUpdateBuffer\",\n    value: function _aniUpdateBuffer(buffer) {\n      if (!(this._totalLength > 0 && buffer >= 0)) {\n        return;\n      }\n\n      Animated.timing(this._animatedBufferLength, {\n        toValue: buffer * this._totalLength,\n        duration: this.props.bufferAniDuration || 200\n      }).start();\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\nexport { Progress as default };\nProgress.Indeterminate = IndeterminateProgress;\nProgress.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/iraklisbogiatziou/Desktop/TBAY/front-end/node_modules/react-native-material-kit/lib/mdl/Progress.js"],"names":["React","Component","getTheme","IndeterminateProgress","defaultProps","Progress","props","theme","_progress","_buffer","_totalLength","_height","Animated","Value","_animatedLength","_animatedBufferLength","_onLayout","nativeEvent","layout","width","height","setValue","_aniUpdateProgress","progress","_aniUpdateBuffer","buffer","value","nextProps","progressTheme","progressStyle","style","backgroundColor","bufferColor","progressColor","position","theProgress","timing","toValue","duration","progressAniDuration","easing","Easing","out","quad","start","bufferAniDuration","Indeterminate"],"mappings":"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","sourcesContent":["/**\n * MDL style progress bar component.\n *\n * Refer to {@link http://www.getmdl.io/components/index.html#loading-section/progress | MDL Progress Bar}\n *\n * Created by ywu on 15/8/7.\n */\nimport React, { Component } from 'react';\nimport { Animated, Easing, View } from 'react-native';\nimport { getTheme } from '../theme';\nimport IndeterminateProgress from './IndeterminateProgress';\nimport { defaultProps } from './progress_common';\n/**\n * Determinate linear progress indicator.\n *\n * @remarks\n * Increasing in width from 0 to 100% of the track, in sync with the processâ€™s progress, with a simplified buffering effect.\n * Refer to {@link https://material.io/design/components/progress-indicators.html#linear-progress-indicators | Guideline} or {@link http://www.getmdl.io/components/index.html#loading-section/progress | MDL implementation}\n */\nexport default class Progress extends Component {\n    constructor(props) {\n        super(props);\n        /** Reference to App's {@link Theme} */\n        this.theme = getTheme();\n        /** current progress value, [0, 1] */\n        this._progress = 0;\n        /** current buffering value, [0, 1] */\n        this._buffer = 0;\n        /** line length when progress is 100% */\n        this._totalLength = 0;\n        /** height of the progress or line width */\n        this._height = new Animated.Value(0);\n        this._animatedLength = new Animated.Value(0);\n        this._animatedBufferLength = new Animated.Value(0);\n        // property initializers begin\n        this._onLayout = ({ nativeEvent: { layout: { width, height }, }, }) => {\n            if (width > 0 && this._totalLength !== width) {\n                this._totalLength = width;\n                this._height.setValue(height);\n                this._aniUpdateProgress(this.progress);\n                this._aniUpdateBuffer(this.buffer);\n            }\n        };\n    }\n    /** Update progress with animation */\n    set progress(value) {\n        if (value >= 0 && value <= 1 && value !== this._progress) {\n            this._progress = value;\n            this._aniUpdateProgress(value);\n        }\n    }\n    /** Get current progress */\n    get progress() {\n        return this._progress;\n    }\n    /** Update buffering progress with animation */\n    set buffer(value) {\n        if (value >= 0 && value !== this._buffer) {\n            this._buffer = value;\n            this._aniUpdateBuffer(value);\n        }\n    }\n    /** Get current buffering progress */\n    get buffer() {\n        return this._buffer;\n    }\n    UNSAFE_componentWillMount() {\n        this.progress = this.props.progress || 0;\n        this.buffer = this.props.buffer || 0;\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.progress = nextProps.progress || 0;\n        this.buffer = nextProps.buffer || 0;\n    }\n    /** {@inheritDoc @types/react#Component.render} */\n    render() {\n        const progressTheme = this.theme.progressStyle;\n        const style = {\n            // @ts-ignore\n            backgroundColor: progressTheme.backgroundColor,\n        };\n        // @ts-ignore\n        const bufferColor = this.props.bufferColor || progressTheme.bufferColor;\n        // @ts-ignore\n        const progressColor = this.props.progressColor || progressTheme.progressColor;\n        return (<View // the background layer\n         style={[defaultProps.style, style, this.props.style]} onLayout={this._onLayout}>\n        <Animated.View // the buffering layer\n         style={{\n            position: 'absolute',\n            backgroundColor: bufferColor,\n            width: this._animatedBufferLength,\n            height: this._height,\n        }}/>\n        <Animated.View // the forefront layer showing progress\n         style={{\n            position: 'absolute',\n            backgroundColor: progressColor,\n            width: this._animatedLength,\n            height: this._height,\n        }}/>\n      </View>);\n    }\n    // property initializers end\n    _aniUpdateProgress(theProgress) {\n        if (!(this._totalLength > 0 && theProgress >= 0)) {\n            return;\n        }\n        Animated.timing(this._animatedLength, {\n            toValue: theProgress * this._totalLength,\n            duration: this.props.progressAniDuration || 300,\n            easing: Easing.out(Easing.quad),\n        }).start();\n    }\n    _aniUpdateBuffer(buffer) {\n        if (!(this._totalLength > 0 && buffer >= 0)) {\n            return;\n        }\n        Animated.timing(this._animatedBufferLength, {\n            toValue: buffer * this._totalLength,\n            duration: this.props.bufferAniDuration || 200,\n        }).start();\n    }\n}\n/** The indeterminate version of {@link Progress} */\nProgress.Indeterminate = IndeterminateProgress;\n/** Defaults, see {@link defaultSimpleProps} */\nProgress.defaultProps = defaultProps;\n//# sourceMappingURL=Progress.js.map"]},"metadata":{},"sourceType":"module"}